<?php
/**
 * Plugin Name: WP TimeZone
 * Plugin URI:  http://wordpress.org/plugins/wp-timezone/
 * Description: Takes care of publishing posts that missed their schedule, for CET/CEST time zones only.
 * Version:     1.3
 * Author:      Ezra Verheijen
 * Author URI:  http://profiles.wordpress.org/ezraverheijen/
 * License:     GPL v3
 * 
 * Copyright (c) 2013, Ezra Verheijen
 * 
 * WP Timezone is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * WP Timezone is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with WP Timezone. If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * WP TimeZone init class.
 * 
 * @since 1.1
 */
class WP_TimeZone {
	
	/**
	 * Attach all functionalities to the correct hooks and filters.
	 * 
	 * @since 1.1
	 */
	function __construct() {
		
		add_action( 'init', array( $this, 'init' ) );
		add_action( 'plugins_loaded', array( $this, 'plugin_translation' ) );
		
		add_filter( 'gettext', array( $this, 'replace_text' ), 20, 3 );
		add_filter( 'plugin_row_meta', array( $this, 'filter_plugin_meta' ), 10, 2 );
		
		register_activation_hook( __FILE__, array( $this, 'add_scheduled_check_option' ) );
		
	}
	
	/**
	 * Attach functions to the "init" hook.
	 * 
	 * @since 1.3
	 */
	function init() {
		
		$this->set_utc_offset();
		$this->check_missed_schedules();
		
	}
	
	/**
	 * Set UTC offset and timezone string based on CET/CEST.
	 * 
	 * @since 1.0
	 */
	function set_utc_offset() {
		
		if ( function_exists( 'date_default_timezone_set' ) )
			date_default_timezone_set( 'Europe/Amsterdam' ); // choose one, it's all the same
		
		// Store local timezone
		$timezone = date( 'T' );
		
		// Restore default WordPress setting
		if ( function_exists( 'date_default_timezone_set' ) )
			date_default_timezone_set( 'UTC' );
		
		$offset = 'CET' === $timezone ? 1 : 2;
		
		$current_offset = get_option( 'gmt_offset' );
		
		if ( $offset !== $current_offset )
			update_option( 'gmt_offset', $offset );
		
		/**
		 * Set the default timezone to show/handle on the `General Settings` page
		 * to avoid confusion and avoid user interference.
		 * Leave empty so WordPress can automatically fill in the offset being used.
		 */
		$timezone_string = '';
		
		// Check if a user messed with the settings
		$current_string = get_option( 'timezone_string' );
		
		// If so, set back to default
		if ( $timezone_string !== $current_string )
			update_option( 'timezone_string', $timezone_string );
		
	}
	
	/**
	 * Look for scheduled posts that missed their schedule.
	 * 
	 * This one is for the nasty WTF!? issues where set_utc_offset()
	 * is not enough or not working.
	 * 
	 * Checks every 5 minutes (if there is traffic on the site) for
	 * scheduled posts that missed their schedule.
	 * If it finds them, it publishes them, max. 10 items at once.
	 * 
	 * @since 1.2
	 * 
	 * @global wpdb $wpdb Interface with the database.
	 * 
	 * @return null Return null if last check was less than 5 minutes ago.
	 */
	function check_missed_schedules() {
		
		global $wpdb;
		
		$last_check = get_option( 'wpt_scheduled_check' );
		
		$five_mins_ago = time() - 300;
		
		if ( $last_check > $five_mins_ago )
			return;
		
		update_option( 'wpt_scheduled_check', time() );
		
		$query = "SELECT ID FROM $wpdb->posts WHERE post_status = 'future' AND post_date < %s LIMIT 0, 10";
		
		$sql = $wpdb->prepare( $query, current_time( 'mysql' ) );
		
		$post_ids = $wpdb->get_col( $sql );
		
		foreach ( $post_ids as $post_id ) {
			wp_publish_post( $post_id );
		}
		
	}
	
	/**
	 * Load the plugin's translated strings. 
	 * 
	 * @since 1.3
	 */
	function plugin_translation() {
		
		load_plugin_textdomain( 'wp-timezone', false, dirname( plugin_basename( __FILE__ ) ) . '/languages/' );
		
	}
	
	/**
	 * Replace translatable text generated by WordPress.
	 * 
	 * - Adds a comment to the `Options General` page so users know the plugin is working.
	 * - Changes the default `Planning failed` message from WordPress to something more reassuring.
	 * 
	 * @since 1.0
	 * 
	 * @param  string $translated_text Translated text.
	 * @param  string $untranslated_text Untranslated text.
	 * @param  string $text_domain Text domain.
	 * @return string Translated text.
	 */
	function replace_text( $translated_text, $untranslated_text, $text_domain ) {
		
		global $pagenow;
		
		if ( ! is_admin() )
			return $translated_text;
		
		if ( 'options-general.php' === $pagenow ) {
			if ( 'Choose a city in the same timezone as you.' === $untranslated_text )
				$translated_text = __( 'Timezones are automatically managed by the WP TimeZone plugin.', 'wp-timezone' );
		}
		
		if ( 'edit.php' === $pagenow ) {
			if ( 'Missed schedule' === $untranslated_text )
				$translated_text = __( 'Missed schedule. The WP TimeZone plugin takes care of publication within 5 minutes.', 'wp-timezone' );
		}
		
		return $translated_text;
		
	}
	
	/**
	 * Add a donate link to the plugin meta info.
	 * 
	 * @since 1.1
	 * 
	 * @param  array $links Current links.
	 * @param  string $file Path to this plugin directory.
	 * @return array All links including donate link.
	 */
	function filter_plugin_meta( $links, $file ) {
		
		if ( plugin_basename( __FILE__ ) === $file ) {
			return array_merge(
					$links,
					array( sprintf( '<a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=3H3RWC5JULGJ4" target="_blank">%s</a>', __( 'Donate', 'wp-timezone' ) ) )
			);
		}
		
		return $links;
		
	}
	
	/**
	 * Add an option to the database for checking of scheduled posts that missed their schedule.
	 * 
	 * @see check_missed_schedules()
	 * 
	 * @since 1.2
	 */
	function add_scheduled_check_option() {
		
		add_option( 'wpt_scheduled_check', time() );
		
	}
	
}

$wp_timezone = new WP_TimeZone();
